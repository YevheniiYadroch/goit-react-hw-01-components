{"version":3,"sources":["Components/Profile/Profile.jsx","Components/Statistics/Statistics.jsx","Components/FriendsList/FriendsListItem.jsx","Components/FriendsList/FriendsList.jsx","Components/TransactionHistory/TransactionHistory.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","title","map","stat","label","percentage","id","FriendsListItem","isOnline","width","defaultProps","FriendsList","friends","friend","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae2a7c91.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Profile.css';\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className=\"Profile\">\r\n      <div className=\"Description\">\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className=\"Avatar\"\r\n        />\r\n        <p className=\"Name\">{name}</p>\r\n        <p className=\"Tag\">@{tag}</p>\r\n        <p className=\"Location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"Stats\">\r\n        <li className=\"Stats-item\">\r\n          <span className=\"Label\">Followers</span>\r\n          <span className=\"Quantity\"> {stats.followers}</span>\r\n        </li>\r\n        <li className=\"Stats-item\">\r\n          <span className=\"Label\">Views</span>\r\n          <span className=\"Quantity\"> {stats.views}</span>\r\n        </li>\r\n        <li className=\"Stats-item\"> \r\n          <span className=\"Label\">Likes</span>\r\n          <span className=\"Quantity\"> {stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n}\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nfunction Statistics({ title, stats }) {\r\n    return (\r\n        <section className=\"Statistics\">\r\n            {title && (<h2 className=\"Title\">{title}</h2>)}\r\n\r\n            <ul className=\"Stat-list\">\r\n                {stats.map(stat => (\r\n                    <li key={stat.id} className=\"Stat-list-item\">\r\n                        <span className=\"Stat-list-label\">{stat.label}</span>\r\n                        <span className=\"Percentage\"> {stat.percentage}%</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nfunction FriendsListItem({avatar, name, isOnline}) {\r\n    return (\r\n        <li className=\"Friend-list-item\" >\r\n            {isOnline ? (<span className=\"Status Online\"></span>):(<span className=\"Status Offline\"></span>)}\r\n            <img className=\"Friend-list-avatar\" src={avatar} alt={name} width=\"48\" />\r\n            <p className=\"Friend-list-name\">{name}</p>\r\n        </li>\r\n    );\r\n};\r\n\r\nFriendsListItem.defaultProps = {\r\n  avatar: 'Image not detected',\r\n};\r\n\r\nFriendsListItem.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n}\r\n\r\nexport default FriendsListItem;","import FriendsListItem from \"./FriendsListItem\";\r\nimport PropTypes from 'prop-types';\r\nimport './FriendsList.css'\r\n\r\nfunction FriendsList({ friends }) {\r\n    return (\r\n            <ul className=\"Friend-list\">\r\n                {friends.map(friend => (\r\n                        <FriendsListItem\r\n                            key={friend.id}\r\n                            avatar={friend.avatar}\r\n                            name={friend.name}\r\n                            isOnline={friend.isOnline}\r\n                        />\r\n                ))}\r\n            </ul>\r\n    );\r\n}\r\n\r\nFriendsList.propTypes = {\r\n    friends: PropTypes.array,\r\n}\r\n\r\nexport default FriendsList;","import PropTypes from \"prop-types\";\r\nimport './TransactionHistory.css'\r\n\r\nfunction TransactionHistory({ items }) {\r\n    return (\r\n        <table className=\"Transaction-history\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"Table-header\">Type</th>\r\n                    <th className=\"Table-header\">Amount</th>\r\n                    <th className=\"Table-header\">Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(item => (\r\n                    <tr key={item.id} className=\"Table-row\">\r\n                        <td className=\"Table-item\">{item.type}</td>\r\n                        <td className=\"Table-item\">{item.amount}</td>\r\n                        <td className=\"Table-item\">{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.array,\r\n}\r\n\r\nexport default TransactionHistory;","import Profile from \"./Components/Profile/Profile\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport FriendsList from \"./Components/FriendsList/FriendsList\";\nimport TransactionHistory from \"./Components/TransactionHistory/TransactionHistory\";\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      \n      <Statistics stats={statisticalData} />\n\n      <FriendsList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}